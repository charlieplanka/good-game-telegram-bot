import os
from dotenv import load_dotenv
import telebot
import logging
import random
import requests

# load API token
load_dotenv()
TOKEN = os.getenv('API_TOKEN')
# to receive user's balance status
MONEY_URL = 'https://api.jsonbin.io/b/5f8daafdadfa7a7bbea58fad/2'

HOW_TO_TEXT = '''
–í—Å–µ–≥–æ —Ç—Ä–∏ –ø—Ä–æ—Å—Ç—ã—Ö —à–∞–≥–∞!

1Ô∏è) –ü–æ–ø–æ–ª–Ω–∏ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç Good Game –≤ –ª—é–±–æ–º –∏–∑ –Ω–∞—à–∏—Ö –∫–∏–±–µ—Ä—Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö –∫–ª—É–±–æ–≤ –æ—Ç 250 ‚ÇΩ –∑–∞ 24 —á–∞—Å–∞ —Å—É–º–º–∞—Ä–Ω–æ
2Ô∏è) –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–û—Ç–∫—Ä—ã—Ç—å –∫–æ—Ä–æ–±–∫—É¬ª
3Ô∏è) –í—ã–∏–≥—Ä—ã–≤–∞–π –ø—Ä–∏–∑—ã!

–í—Å–µ –ø—Ä–∏–∑—ã –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.

–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –≤—Å–µ—Ö –ø—Ä–∏–∑–∞—Ö –≤ —Ä–∞–∑–¥–µ–ª–µ ¬´–ü—Ä–∏–∑—ã¬ª
'''

PRIZES_TEXT = '''
–ü—Ä–∏–∑—ã –∏–∑ –ö–µ–π—Å–æ–≤ –º–æ–∂–Ω–æ –∑–∞–±—Ä–∞—Ç—å —Å—Ä–∞–∑—É —É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –î–ª—è —ç—Ç–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–æ–π—Ç–∏ –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –∏, –æ—Ç–∫—Ä—ã–≤ –≤–∫–ª–∞–¥–∫—É ¬´–ú–æ–∏ –ø–æ–¥–∞—Ä–∫–∏¬ª, –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–∑–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —É —Ç–µ–±—è —Å–µ–π—á–∞—Å –µ—Å—Ç—å.

–ë–∞–∑–æ–≤—ã–π –ö–µ–π—Å (250 —Ä—É–±–ª–µ–π):
‚Ä¢ 1 —á–∞—Å –∏–≥—Ä—ã –∑–∞ –ü–ö
‚Ä¢ –ü–æ–ª—á–∞—Å–∞ –∏–≥—Ä—ã –∑–∞ PS

–ö–µ–π—Å –¥–ª—è –±–æ—è—Ä (500 —Ä—É–±–ª–µ–π):
‚Ä¢ –ë–∞—Ç–æ–Ω—á–∏–∫
‚Ä¢ 1.5 —á–∞—Å–∞ –∑–∞ –ü–ö
‚Ä¢ –ö–æ–ª–∞ (0.5)
‚Ä¢ –ü–∞–∫–µ—Ç –≤ –∑–∞–ª –°—Ç–∞–Ω–¥–∞—Ä—Ç (–Ω–æ—á–Ω–æ–π)

–ö–µ–π—Å –¥–ª—è –í–µ–ª—å–º–æ–∂ (1000 —Ä—É–±–ª–µ–π):
‚Ä¢ –ü–∞–∫–µ—Ç –≤ –∑–∞–ª VIP (—É—Ç—Ä–µ–Ω–Ω–∏–π)
‚Ä¢ –ö–æ–ª–∞ –∏ –±–∞—Ç–æ–Ω—á–∏–∫
‚Ä¢ 3 —á–∞—Å–∞ –∑–∞ PS

–ö–µ–π—Å –¥–ª—è –ú–µ—Ü–µ–Ω–∞—Ç–æ–≤ (2000 —Ä—É–±–ª–µ–π):
‚Ä¢ –ê–±–æ–Ω–µ–º–µ–Ω—Ç –Ω–∞ –ø–æ—Å–µ—â–µ–Ω–∏–µ –∫–ª—É–±–∞ (–Ω–∞ –≤—Å–µ –≤—ã—Ö–æ–¥–Ω—ã–µ)
‚Ä¢ –ö–∞–ª—å—è–Ω
‚Ä¢ –ü–∞–∫–µ—Ç –≤ –∑–∞–ª VIP (–Ω–æ—á–Ω–æ–π)
'''

HOW_TO_BUTTON = telebot.types.InlineKeyboardButton(text='–ö–∞–∫ –æ—Ç–∫—Ä—ã—Ç—å –∫–æ—Ä–æ–±–∫—É?', callback_data='how_to')
PRIZES_BUTTON = telebot.types.InlineKeyboardButton(text='–ü—Ä–∏–∑—ã', callback_data='prizes')
OPEN_BOX_BUTTON = telebot.types.InlineKeyboardButton(text='–û—Ç–∫—Ä—ã—Ç—å –∫–æ—Ä–æ–±–∫—É', callback_data='open_box')

bot = telebot.TeleBot(TOKEN, parse_mode=None)
logger = telebot.logger
telebot.logger.setLevel(logging.DEBUG)


@bot.message_handler(commands=['start'])
def start(message):
    text = '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –£ —Ç–µ–±—è –µ—Å—Ç—å —à–∞–Ω—Å –ø–æ–ª—É—á–∏—Ç—å –∫–ª–∞—Å—Å–Ω—ã–µ –∫–æ—Ä–æ–±–∫–∏ —Å –ø—Ä–∏–∑–∞–º–∏ –æ—Ç Good Game. –ñ–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∏, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ!'
    markup = configure_keyboard('start')
    bot.send_message(message.chat.id, text, reply_markup=markup)


@bot.callback_query_handler(func=lambda call: True)
def query_handler(call):
    text = ' '
    if call.data == 'how_to':
        text = HOW_TO_TEXT
    elif call.data == 'prizes':
        text = PRIZES_TEXT
    elif call.data == 'open_box':
        text = define_prize()

    markup = configure_keyboard(call.data)
    bot.send_message(call.message.chat.id, text, reply_markup=markup)


def define_prize():
    text = ' '
    balance = get_balance()
    balance_text = f'–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞ –≤—ã –ø–æ–ø–æ–ª–Ω–∏–ª–∏ –±–∞–ª–∞–Ω—Å –Ω–∞ {balance} —Ä—É–±–ª–µ–π. '
    if balance >= 250:
        text = '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –ë–∞–∑–æ–≤—ã–π –∫–µ–π—Å!'
    else:
        text = '–ù—É–∂–Ω–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á—ë—Ç –Ω–µ –º–µ–Ω–µ–µ, —á–µ–º –Ω–∞ 250 —Ä—É–±–ª–µ–π, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫ üò¢'
    return balance_text + text


def configure_keyboard(command):
    markup = telebot.types.InlineKeyboardMarkup()
    if command == 'start' or command == 'open_box':
        markup.add(OPEN_BOX_BUTTON)
        markup.add(PRIZES_BUTTON, HOW_TO_BUTTON)
    elif command == 'how_to':
        markup.add(OPEN_BOX_BUTTON, PRIZES_BUTTON)
    elif command == 'prizes':
        markup.add(OPEN_BOX_BUTTON, HOW_TO_BUTTON)
    return markup


def get_balance():
    # pretend to get user's balance data
    user_id = random.randint(1, 5)
    users = requests.get(MONEY_URL).json()
    user_balance = users[str(user_id)]
    return user_balance


bot.polling()
